extends ../layout
   
block headLinks
  link(rel="stylesheet" href="/stylesheets/chatRoom.css")

block content
  h1.titlehead#title

  #conversation

  form.pure-form
    input#message(style='display: inline-block')
    button#submit(type='submit', class='pure-button pure-button-primary') 送信

block script
  //- script(src='//code.jquery.com/jquery-1.11.0.min.js')
  //- script(src='/socket.io/socket.io.js')

  script.

    $(function() {
        //- $(".js-balloon").each(function(index, item) {
        //-   var _h = $(item).height();
        //-   var _box = $(item).closest(".js-speakBox").height(_h + 100);
        //- });
    });
    var fixSpeakBox = function(div){
        var item = div.find(".js-balloon")[0];
        var _h = $(item).height();
        if ( _h < 40 ){
          _h = 40 ;
          }
        var _box = $(item).closest(".js-speakBox").height(_h + 20);
    }        


    var socket = io();
    socket.on('connect', function() {
      socket.emit('join room', '#{roomId}');
    });

    var myMemberList = [];
    var otherMemberList = [];

    console.log('test');
    socket.emit('memberList', '#{roomId}', function(err, lists) {
      console.log('messages', err, lists);
      
      lists[0].forEach(function(member) {
        if (member._id == '#{userId}') {
          myMemberList = lists[0];
          otherMemberList = lists[1];
        }
      });
      if (myMemberList.length === 0) {
        myMemberList = lists[1];
        otherMemberList = lists[0];
      }

      console.log('myMemberList: ', myMemberList);
      console.log('otherMemberList: ', otherMemberList);

      var chatRoomName = '';
      myMemberList.forEach(function(member) {
        chatRoomName += member.name + ' ';
      });
      otherMemberList.forEach(function(member) {
        chatRoomName += member.name + ' ';
      });
      $('#title').text(chatRoomName);
    
      socket.emit('ready');
    });

      $('#submit').on('click', function(event) {
        socket.emit('message', $('#message').val());
        $('#message').val('');
        return false;
      })
  
      socket.on('message', function(message) {
        console.log('receive message! myMemberList=', myMemberList);

        var div = {};
        var _html = null;
        myMemberList.forEach(function(member) {
          if (message.userId == member._id) {
            // Leftのとき
            _html = '';
            _html += '<div style=" margin: 5px;">';
            _html += '<div class="speakBoxRight js-speakBox">';
            _html += '<img class="speakBoxRight-userpic" src="/users/_USERID_/picture">';
            _html += '<div class="speakBoxRight-prickle">';
            _html += '▼';
            _html += '</div>';
            _html += '<div class="test speakBoxRight-balloon js-balloon">';
            _html += '_MESSAGE_';
            _html += '</div>';
            _html += '</div>';
            _html += '</div>';
          }
        });
        
        if (_html === null) {
          // Rightのとき
          _html = '';
          _html += '<div style=" margin: 5px;">';
          _html += '<div class="speakBoxLeft js-speakBox">';
          _html += '<img class="speakBoxLeft-userpic" src="/users/_USERID_/picture">';
          _html += '<div class="speakBoxLeft-prickle">';
          _html += '▼';
          _html += '</div>';
          _html += '<div class="test speakBoxLeft-balloon js-balloon">';
          _html += '_MESSAGE_';
          _html += '</div>';
          _html += '</div>';
          _html += '</div>';
        }

        // _html にデータをバインド 
        _html = _html.replace("_USERID_", message.userId);
        _html = _html.replace("_MESSAGE_", message.message);
        div = $(_html); 

        // DOMにレンダリング
        $('#conversation').append( div );
        $('html,body').animate({
          scrollTop: 10000
        }, 'fast');
  
        fixSpeakBox( div );
      });
